version: "3.6"

x-env-postgres: &env-postgres
  POSTGRES_DB: "interview"
  POSTGRES_USER: "pguser"
  POSTGRES_PASSWORD: "pass123"
  POSTGRES_URL: "jdbc:postgresql://pgdb:5432/interview"

services:

  pgdb:
    image: postgres
    container_name: pgdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      <<: *env-postgres
    volumes:
      - local_pgdata:/var/lib/postgresql/data

  liquibase:
    image: liquibase/liquibase:latest
    container_name: liquibase
    volumes:
      - ./liquibase/changelogs:/liquibase/changelogs
    environment:
      <<: *env-postgres
    command:
      - "--url=jdbc:postgresql://pgdb:5432/interview"
      - "--changeLogFile=/changelogs/changelog.xml"
      - "--defaultsFile=/liquibase.properties"
      - "--username=pguser"
      - "--password=pass123"
      - "update"
    depends_on:
      pgdb:
        condition: service_started

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:5050"
    environment:
      PGADMIN_DEFAULT_EMAIL: pguser@bhart.com
      PGADMIN_DEFAULT_PASSWORD: pass123
      PGADMIN_LISTEN_PORT: 5050
      PGADMIN_SETUP_EMAIL: pguser@bhart.com
      PGADMIN_SETUP_PASSWORD: pass123
      PGADMIN_SERVER_MODE: 'True'
      PGADMIN_SERVER_NAME: 'interview'
      PGADMIN_SERVER_HOST: 'pgdb'
      PGADMIN_SERVER_PORT: '5432'
      PGADMIN_SERVER_MAINTENANCE_DB: 'postgres'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      pgdb:
        condition: service_started
      liquibase:
        condition: service_completed_successfully

  maven-builder:
    image: maven:3.9.6-amazoncorretto-17
    container_name: maven-builder
    volumes:
      - ./interview-tracker:/usr/src/app
    working_dir: /usr/src/app
    command: mvn clean install


  interviewapp:
    image: interview-app:latest
    container_name: interviewapp
    build:
      context: ./interview-tracker
      dockerfile: Dockerfile.app
    environment:
      <<: *env-postgres
    ports:
      - "8080:8080"
    depends_on:
      pgdb:
        condition: service_started
      liquibase:
        condition: service_completed_successfully
      maven-builder:
        condition: service_completed_successfully

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.web
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/bhart-web:/app
    depends_on:
      interviewapp:
        condition: service_started


volumes:
  local_pgdata:
  pgadmin-data: